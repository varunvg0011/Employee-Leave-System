@model Employee_leave_system.Models.EmployeeRegistration


@{
    Layout = null;
}

<script src="~/js/InputValidations.js" type="text/javascript"></script>




<div style="background-color:lavender">
    <hr />
    <div class="container" style="text-align:center;">
         <h5>Below are the current details of the Employee, you can change them and click on Update Details to update them.</h5>
    </div>
    
    
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()        
        <div class="form-horizontal" style="display:table;margin:auto !important;width: 50% !important;border: solid green 3px;padding: 10px;background-color:antiquewhite">        
            <div style="display:table-row">
                <img style="display:table-cell;margin-left:80%;border-radius:300px;height:10em;width:60%" src='@Model.ImgData' class="img-fluid" alt="@Model.FirstName's Image" image">
            </div>
            
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-id-badge' style='font-size:24px;'></i>
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px"} })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-user-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px"} })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>          
            </div>
            <br>
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-user-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px"} })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-venus-mars' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px"} })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-user-tag' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px"} })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='far fa-calendar-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.CasualLeaves, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.CasualLeaves, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px", type = "number"} })
                    @Html.ValidationMessageFor(model => model.CasualLeaves, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='far fa-calendar-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.SickLeaves, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.SickLeaves, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px", type = "number"} })
                    @Html.ValidationMessageFor(model => model.SickLeaves, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='far fa-calendar-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.MatternityLeaves, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.MatternityLeaves, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px", type = "number"} })
                    @Html.ValidationMessageFor(model => model.MatternityLeaves, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='far fa-calendar-alt' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.PatternityLeaves, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.PatternityLeaves, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px", type = "number"} })
                    @Html.ValidationMessageFor(model => model.PatternityLeaves, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            
            
            <div class="form-group" style="display:table-row">
                <div style="width:max-content;margin-left:15px">
                    <i class='fas fa-calendar' style='font-size:24px'></i>
                    @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2",@style = "width:max-content" })
                </div>
                <div class="col-md-10" style="display:table-cell">
                    @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @style = "margin-left:40px" } })
                    @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            
            <div style="display:table-row">
                <label for="filename">Change Profile Picture: </label>
                <input style="display:table-cell" onchange='SelectProfilePic(this)' type="file" id="ImgData" name="filename">                
            </div>
            <br>
            
            <div>
                <span id="PicSuccesfullyUpdated" style="display:none">
                    Profile picture updated succesfully
                </span>
            </div>
            <div>
                <span id="PicFailedToUpdate" style="display:none">
                    Profile picture update failed. Please try again
                </span>
            </div>
            <div  class="text-center" style="position:relative;display:flex;left:12em">
                <button id ="editDetails" type="button" onclick=EditEmpDetails() class="btn btn-primary" style="width:max-content">Edit Details</button>
                <button id = "updateDetails" type="button" onclick=UpdateEmpDetails() class="btn btn-primary" style="width:max-content;display:none">Update Details</button>
                <button type="button" onclick=CancelUpdateDetails() class="btn btn-primary" style="margin-left:25px">Cancel</button>
            </div>            
         </div>
    }
</div>









<script>

    var imgDataBase64=""
    function SelectProfilePic(element)
    {
        var file = element.files[0];
        var reader = new FileReader();
        reader.onloadend = function() 
        {
            imgDataBase64 = reader.result
            $.ajax({   
                url:"UpdateEmpProfilePic",
                method:"POST",
                data:
                {                                          
                    imgData : imgDataBase64            
                },
                success: function(res)
                {
                    if(res){
                        document.getElementById('PicSuccesfullyUpdated').display = true;
                    }
                    else{
                        document.getElementById('PicFailedToUpdate').display = true;
                    }
                },
                fail: function(res)
                {
                       
                },
            })
        }
        reader.readAsDataURL(file);
        
    }
    

    function CancelUpdateDetails(){
        window.location="CancelUpdatingEmpDetails"
    }

    
    function EditEmpDetails(){   
        document.getElementById('updateDetails').style.display = "block"
        document.getElementById('editDetails').style.display = "none"
        document.getElementById('FirstName').disabled = false
        document.getElementById('LastName').disabled = false                       
                             
       }
       
       function UpdateEmpDetails()
       {
           let firstName = document.getElementById('FirstName').value
           let lastName = document.getElementById('LastName').value
           
           
           //DOR is read only       
           if(IsValidFirstName(firstName) && IsValidLastName(lastName)){      
                $.ajax({
                        url:"UpdateEmpProfile",
                        method:"POST",
                        data:
                        {                            
                            firstName : firstName,
                            lastName : lastName,
                                                   
                        },
                        success: function(res)
                        {
                           if(res){
                               alert('Emp Details have been updated!')
                               window.location = "EmployeeDetails"
                           }
                        },
                        fail: function(res)
                        {
                       
                        },
                })
            }
            else{
                alert('Please use correct format!')
            }
       }
    
</script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js" integrity="sha512-aVKKRRi/Q/YV+4mjoKBsE4x3H+BkegoM/em46NNlCqNTmUYADjBbeNefNxYV7giUp0VxICtqdrbqU7iVaeZNXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>